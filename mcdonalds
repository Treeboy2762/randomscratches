#include <iostream>
#include <string>
#include <fstream>
#include <vector>
#include <iomanip>
using namespace std;
bool loggedIn = false;
string loggedAccount;

// 유저객체. 아이디, 비밀번호, 돈, 주문이력(미구현) 이 포함되어야함

class User {
public:
    User();
    User(string id, string pass, int initialCharge);
    string getID();
    string getPass();
    void addOrderHistory(pair<string, int> order);
    void printOrderHistory();
    int changebalance(int amount);
    int getbalance();

private:
    string userID;
    string password;
    int balance; //charge
    vector <pair<string, int>> orderHistory;
    
};

User::User(string id, string pass, int initialCharge) {
    userID = id;
    password = pass;
    balance = initialCharge;
}

string User::getID()
{
    return userID;
}

string User::getPass()
{
    return password;
}

void User::addOrderHistory(pair<string, int> order)
{
    orderHistory.push_back(order);
}

void User::printOrderHistory()
{
    cout << "Printing your order history..." << endl;
    for (int i = 0; i < orderHistory.size(); i++) {
      cout << orderHistory[i].first << orderHistory[i].second << endl;
    }
}

int User::changebalance(int amount)
{
    balance = balance + amount;
    return balance;
}

int User::getbalance()
{
    return balance;
}

// 유저데이터베이스 클래스. 유저 객체를 모아두어 아이디를 검색하는데 사용.

class UserDatabase {
public:
    UserDatabase();
    void addUser(User);
    void printUser();
    int findUser(string);
    User getUser(int);
    User getUser(string);

private:
    vector<User> users;
};

UserDatabase::UserDatabase() {
}

void UserDatabase::addUser(User user)
{
    users.push_back(user);
}

User UserDatabase::getUser(int key)
{
    return users[key];
}

User UserDatabase::getUser(string key)
{
    return users[findUser(key)];
}

void UserDatabase::printUser()
{
    for (int i = 0; i < users.size(); i++) {
        cout << "User no. " << i << ": " << users[i].getID() << "/" << users[i].getPass() << "/" << users[i].getbalance() << endl;
    }
}

int UserDatabase::findUser(string key)
{
    for (int i = 0; i < users.size(); i++) {
        if (key.compare(users[i].getID()) == 0)
            return i;
    }
    return -1;
}

// 1번문제, 사인업

void signUp(UserDatabase& db) {
    string inputID;
    string inputpass;
    int inputmoney;
    while (true) {
        cout << "Input your ID :" << endl;
        cin >> inputID;
        if (inputID.compare("0") == 0)
            return;
        else if (db.findUser(inputID) != -1)
            cout << "Duplicated user id" << endl << endl;
        else
            break;
    }

    cout << "Input your password :" << endl;
    cin >> inputpass;
    cout << "Input your total money :" << endl;
    cin >> inputmoney;

    db.addUser(User(inputID, inputpass, inputmoney));
    cout << "Welcome, " << inputID << endl;
}

// 2번문제, 로그인

void login(UserDatabase& db) {
    string inputID;
    string inputpass;
    string tempPass;
    while (true) {
        cout << "Input your ID(0-to main menu) : ";
        cin >> inputID;
        if (db.findUser(inputID) == -1){
            cout << "ID is not existing" << endl << endl;
            return;
        }
        else {
          break;
        }   
    }

    tempPass = db.getUser(db.findUser(inputID)).getPass();

    while (true) {
        cout << "Input your password : ";
        cin >> inputpass;
        if (inputpass.compare(tempPass) != 0)
            cout << "Wrong Password!" << endl;
        else
            break;
    }
    cout << "Welcome, " << inputID << endl;
    loggedIn = true;
    loggedAccount = inputID;
}

// 3번문제, 쇼메뉴

void showMenu() {
    cout << "----------Mcdonalds Menu----------" << endl;
    cout << left << setw(28) << "1. Hamburger" << setw(6) << "- 1000" << endl;
    cout << left << setw(28) << "2. Cheeseburger" << setw(6) << "- 1500" << endl;
    cout << left << setw(28) << "3. Big Mac" << setw(6) << "- 3000" << endl;
    cout << left << setw(28) << "4. Quarter Pounder Burger" << setw(6) << "- 4000" << endl;
    cout << left << setw(28) << "5. Double Quarter Pounder" << setw(6) << "- 5000" << endl;
    cout << left << setw(28) << "6. Fries" << setw(6) << "- 1500" << endl;
    cout << left << setw(28) << "7. Chicken McNuggets" << setw(6) << "- 2000" << endl;
    cout << left << setw(28) << "8. Coke" << setw(6) << "- 1500" << endl << endl;
}

// 4번문제, 주문

void orderMenu(UserDatabase& db) {
  int total = 0;
  while (true) {
      int menu, number;

      vector <int> vPrice = { 1000,1500,3000,4000,5000,1500,2000,1500 };
      vector <string> vName = { "Hamburger","Cheeseburger","Big Mac","Quarter Pounder Burger","Double Quarter Pounder","Fries","Chicken McNuggets","Coke" };
      vector <pair<string, int>> order;
      

      cout << "Select menu number (0-to main menu) : ";
      cin >> menu;

      if (menu == 0) {
        for (int i = 0; i < order.size(); i++ ) {
          db.getUser(loggedAccount).addOrderHistory(order[i]);
        }
        cout << "Your total purchase amount is " << total << endl;
        cout << "Your balance is " << db.getUser(loggedAccount).changebalance(-1 * total) << endl;
        cout << "Thanks~" << endl << endl;
        return;
      }

      else {
        menu--;
        cout << "How many '" << vName[menu] << "' do you want : ";
        cin >> number;

        if (total + vPrice[menu] * number > db.getUser(loggedAccount).getbalance()) {
          cout << "You don't have enough money!";
        }

        else {
          order.push_back(make_pair(vName[menu], number)); // 여기에썼음
          total += vPrice[menu] * number;
          cout << "You ordered " << vName[menu] << " which cost " << vPrice[menu] * number << endl;
        }

      }

  }

}

// 5번문제, 오더컨디션
void orderCondition(UserDatabase& db) {
  db.getUser(loggedAccount).printOrderHistory();
}

int main() {
    int x;
    int menu;
    UserDatabase Database = UserDatabase();
    while (true) {

        cout << "-----------------------------------" << endl;
        cout << "-----Mcdonalds Delivery System-----" << endl;
        cout << "-----------------------------------" << endl;
        cout << "1. Sign up" << endl;
        cout << "2. login" << endl;
        cout << "3. Show Menu" << endl;
        cout << "4. Order" << endl;
        cout << "5. Order condition" << endl;
        cout << "6. Refund" << endl;
        cout << "7. Logout" << endl;
        cout << "0. Exit" << endl;
        cout << "99. Print User Status (Debug!!)" << endl;
        cout << "Select -> ";
        cin >> x;
        if (x == 0) {
            break;
        }
        else if (x == 1) {
            if (loggedIn) {
                cout << "You are already logged in to " << loggedAccount << " account" << endl;
                cout << "Return to main menu " << endl << endl;
            }
            else
                signUp(Database);
        }
        else if (x == 2) {
            if (loggedIn) {
                cout << "You are already logged in to " << loggedAccount << " account" << endl;
                cout << "Return to main menu " << endl << endl;
            }
            else
                login(Database);
        }
        else if (x == 3) {
            showMenu();
        }
        else if (x == 4) {
            if (loggedIn != true) {
                cout << "You have to login first\n" << "Return to main menu\n\n";
            }
            else {
                orderMenu(Database);
            }
        }
        else if (x == 5) {
            if (loggedIn != true) {
                cout << "You have to login first\n" << "Return to main menu\n\n";
            }
            else {
                orderCondition(Database);
            }
        }
        else if (x == 7) {
            if (loggedIn) {
                int input;
                cout << "If you want to logout, Please enter 1 (0-to main menu) : " << endl;
                cin >> input;
                if (input == 1) {
                    loggedIn = false;
                    loggedAccount = "";
                    cout << "Successfully logged out" << endl;
                }
            }
            else {
                cout << "You have to login first" << endl;
                cout << "Return to main menu " << endl << endl;
            }
        }
        else if (x == 99) {
            Database.printUser();
        }
        else
            cout << "Choose from 0 to 7: ";

    }
}
